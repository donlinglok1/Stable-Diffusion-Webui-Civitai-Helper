import os
import json
from transformers import pipeline
model_name = "yuvalkirstain/PickScore_v1"
classifier = pipeline("zero-shot-image-classification", model = model_name)
labels_for_classification = [
            "nipples",
            "pussy",
            "penis",
            "nude",
            "photo",
            "realistic",
            "photorealistic",
            "cleavage",
            "huge breasts",
            "bikini",
            "bodysuit",
            "navel",
            ]

pony_tags = ['Pony']
xl_tags = ['SDXL 0.9','SDXL 1.0','SDXL 1.0 LCM','SDXL Distilled','SDXL Turbo']
ani_tags = [
    'anime', 
    'video game', 
    'fgo', 
    '3d'
    ]
real_tags = [
    'photorealistic',
    'realistic', 
    'pornstar'
    ]
Character_tags = [
    'character', 
    'celebrity', 
    'characters', 
    'video game'
    ]
Concept_tags = [
    'concept',
    'poses'
    ]
Costume_tags = [
    'clothing'
    ]
Sex_tags = [

    ]
Style_tags = [
    'style'
    ]

source_folder = "D:\\Lora"
search_extensions = ".safetensors"

def move(source_path,target_path):
    try:
        # 移動檔案
        os.replace(source_path, target_path)  # 或者使用 os.replace() 來覆蓋目標位置的檔案
        print(f"已成功移動檔案到：{target_path}")
    except FileNotFoundError:
        print(f"找不到原始檔案：{source_path}")
    except Exception as e:
        print(f"移動檔案時發生錯誤：{e}")

def process_file(file):
    file_name = os.path.splitext(file)[0].replace(search_extensions, "")
    file_extension = os.path.splitext(file)[1]
    if file_extension == search_extensions:
        info_path = root+"\\"+file_name+".civitai.info"
        if os.path.exists(root+"\\"+file_name+".civitai.info.model"):
            file_stats = os.stat(root+"\\"+file_name+".civitai.info.model")
            if file_stats.st_size > 100:
                info_path = root+"\\"+file_name+".civitai.info.model"
            
        with open(info_path, "r", encoding="utf-8") as file:
            file_content = file.read()
            #print(file_content)
            try:
                data = json.loads(file_content)
                if "modelVersions" in data and "baseModel" in data["modelVersions"][0]:
                    baseModelValue = data["modelVersions"][0]["baseModel"]
                elif "baseModel" in data:
                    baseModelValue = data["baseModel"]
        
                lora_cat = ""
                if "tags" in data:
                    keywordValue = data["tags"]
                elif "trainedWords" in data:
                    keywordValue = data["trainedWords"]

                    isPony = False
                    if baseModelValue in pony_tags:
                        lora_cat += "\\pony"
                        isPony = True
                    else:
                        if baseModelValue in xl_tags:
                            lora_cat += "\\xl"

                        isAniOrRealDone = False
                        for tag in keywordValue:
                            if tag in real_tags and isAniOrRealDone == False:
                                lora_cat += "\\real"
                                isAniOrRealDone = True
                            elif tag in ani_tags and isAniOrRealDone == False:
                                lora_cat += "\\ani"
                                isAniOrRealDone = True
                        
                        if isAniOrRealDone == False:
                            lora_cat += "\\man"
                            isAniOrRealDone = True
                            
                    isTypeDone = False
                    for tag in keywordValue:
                        if tag in Character_tags and isTypeDone == False:
                            lora_cat += "\\Character"
                            isTypeDone = True
                        if tag in Concept_tags and isTypeDone == False:
                            lora_cat += "\\Concept"
                            isTypeDone = True
                        if tag in Costume_tags and isTypeDone == False:
                            lora_cat += "\\Costume"
                            isTypeDone = True
                        if tag in Sex_tags and isTypeDone == False:
                            lora_cat += "\\Sex"
                            isTypeDone = True
                        if tag in Style_tags and isTypeDone == False:
                            lora_cat += "\\Style"
                            isTypeDone = True
                
                if "nsfw" in data and data["nsfw"] == True:
                    lora_cat += "\\nsfw"
                else:
                    try:
                        score_json = classifier(f"{root}\\{file_name}.preview.png", candidate_labels = labels_for_classification)
                        print(score_json)
                        if score_json[0]['score'] > 0.4:
                            lora_cat += "\\nsfw"
                    except Exception as e:
                        print(f"{e}")
            except Exception as e:
                print(f"處理 JSON 時發生錯誤：{e}")

        new = f"{source_folder}{lora_cat}\\{file_name}"
        print(new)

        if not os.path.exists(os.path.dirname(new)):
            try:
                os.makedirs(os.path.dirname(new))
            except OSError as exc: # Guard against race condition
                if exc.errno != errno.EEXIST:
                    raise

        move(f"{root}\\{file_name}.civitai.info",f"{new}.civitai.info")
        move(f"{root}\\{file_name}.civitai.info.model",f"{new}.civitai.info.model")
        move(f"{root}\\{file_name}.preview.png",f"{new}.preview.png")
        move(f"{root}\\{file_name}.safetensors",f"{new}.safetensors")

for root, dirs, files in os.walk(source_folder):
    for file in files:
        process_file(file)
    break
